<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.warganiser</groupId>
    <version>0.0.1</version>
    <name>org.warganiser.server</name>
    <artifactId>org.warganiser.server</artifactId>
    <packaging>jar</packaging>

    <properties>
        <java.version>1.8</java.version>
        <jetty.version>9.3.10.v20160621</jetty.version>
        <jersey-version>2.25.1</jersey-version>
        <jackson.version>2.8.1</jackson.version>
        <hk2.version>2.5.0-b32</hk2.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        
        <!-- Jersey + Jetty-->
		<!-- https://mvnrepository.com/artifact/org.glassfish.jersey.core/jersey-server -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
		</dependency>
		<dependency>
		    <groupId>org.glassfish.jersey.core</groupId>
		    <artifactId>jersey-server</artifactId>
		    <version>${jersey-version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.containers</groupId>
			<artifactId>jersey-container-jetty-http</artifactId>
			<version>${jersey-version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.hk2</groupId>
			<artifactId>hk2-metadata-generator</artifactId>
			<version>${hk2.version}</version>
		</dependency>
		<!-- HK2 by default requires generation of XML files from annotations. This plugin instead supports reading the annotations directly. -->
		<dependency>
			<groupId>gov.va.oia</groupId>
			<artifactId>HK2Utilities</artifactId>
			<version>1.4.1</version>
		</dependency>

		
		<!-- Jackson's JAX-RS provider -->
	    <dependency>
	      <groupId>com.fasterxml.jackson.jaxrs</groupId>
	      <artifactId>jackson-jaxrs-json-provider</artifactId>
	      <version>${jackson.version}</version>
	    </dependency>
	    
	    <!-- Persistence -->
	    <dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>4.3.7.Final</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>4.3.7.Final</version>
		</dependency>
		<dependency>
			<groupId>org.apache.derby</groupId>
			<artifactId>derby</artifactId>
			<version>10.11.1.1</version>
		</dependency>
		
		<!-- Util -->
		<dependency>
			<!-- For easy equals/hashcode/toString builders with commons4e plugin -->
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.6</version>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>19.0</version>
		</dependency>
		
		<!-- Testing. Order of dependencies is important as unit bundles some hamcrest classes-->
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>1.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.9.5</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>

            <!-- The maven app assembler plugin will generate a script that sets up the classpath and runs your project -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>appassembler-maven-plugin</artifactId>
                <version>1.1.1</version>
                <configuration>
                    <assembleDirectory>target</assembleDirectory> 
                    <programs>
                        <program>
                            <mainClass>org.warganiser.server.WarganiserServerLauncher</mainClass>
                            <name>webapp</name>
                        </program>
                    </programs>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>assemble</goal>
                        </goals>
                    </execution>				
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
